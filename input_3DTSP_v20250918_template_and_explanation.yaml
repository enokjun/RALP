# output project name and folder path name
filename: "project_filename"
input_folder_path: "./03-Input/"
output_folder_path: "./04-Results/"

## restart simulation from earlier point
restarting_simulation_JSON: null 
# if null, always start from the time step = 0 and rerun everything
# if input JSON file is specified, it will restart the simulation from based on the input data.
# the filename must be consistent to find the previous analysis results

# output file format
# format of the results output (in text) - options: {"csv", "grd", "asc"}
results_format: "csv"

# generate plotly plot
generate_plot: true

# unit weight of water (default) - unit: kN/m^3
unit_weight_of_water: 9.81

# critical FS at which failure is assumed to occur
FS_crit: 1.3

# number of iterations for Monte-Carlo probabilistic simulation
# for deterministic analysis, assign one (1)
# for probabilistic analysis, assign integer greater than one (1)
monte_carlo_iteration_max: 1

# minimum dimension of wetting front change depth to consider (dz)
vertical_spacing: 0.25

# option for applying termination condition to end simulation earlier after single FS < FS_crit
# if False terminate when simulation time reaches t_max
termination_apply: false

# after failure time increment
# if True, use debris_t_max and debris_dt for updating time after single FS < FS_crit
after_termination_new_times_apply: false

# Assuming surface slope changes rainfall infiltration
# if false, do not consider the slanted slope of DEM surface
DEM_surf_dip_infiltraion_apply: false

# option to either apply criteria for landslide that develops into debris-flow (Kang et al., 2017)
DEM_debris_flow_criteria_apply: true

# option to compute FS based on infinite slope or 3D LEM slope stability
# options: {null, infinite, 3D Janbu}
# if null, only the Green-Ampy infiltration is performed
FS_analysis_method: "infinite"

# for 3D Janbu analysis
# if 1 = only single cell
# if n (>1) = finds n x n group cells as a failure cells
# the n number must be an positive integer 
cell_size_3DFS_min: 1
cell_size_3DFS_max: 3

# parameters for superellipse DEM cell grouping 
# abs(x/x_a)**n + abs(y/y_b)**n = 1;  n = power, x_a/y_b or y_b/x_a = eccentricity ratio
superellipse_power: [1, 1.1, 1.2, 1.3, 1.4, 1.5, 1.6, 1.7, 1.8, 1.9, 2.0, 2.2, 2.4, 2.6, 2.8, 3.0, 4.0, 5.0, 7.5, 10.0, 100.0]
superellipse_eccentricity_ratio: [1.0, 1.3333, 1.5, 2, 3, 4, 5]  # testing both x_a/y_b and y_b/x_a

# convergence criteria for 3D slope stability
3D_FS_iteration_limit: 30
3D_FS_convergence_tolerance: 0.005

# apply side resistance
apply_side_resistance_3D: true

# apply root effect resistance
apply_root_resistance_3D: true

# option to compute all UCA for debris-flow criteria
# if true, compute UCA for every cells
# if false, just for those that will potentially fail into debris-flow
DEM_UCA_compute_all: true

# multiprocessing CPU count
# if specified number is larger than the possible CPU logical processers, the maximum CPU thread will be used
max_cpu_num: 8

# time step - rainfall duration - unit: hour & rainfall intensity flux and rainfall intensity intensity
# uniform rainfall: needs number to "rain_I_mmphr", "t_max", "dt"
# non-uniform rainfall: needs GIS_filename corresponding the each time into list format ["r1", "r2", ... ]
rain_unit: "mm/hr"  # unit for rainfall intensity - format: "(length)/(time)": length = {mm, cm, m}; time = {s, min, hr}
# series of [ [start time (excluding except when time = 0), end time (including), rainfall intensity (number or GIS filename)], ...]
# the initial rainfall at time = 0 must be greater than zero (0)
rainfall_history:  
  # series of list with [start time, end time, rainfall intensity information]
  # rainfall intensity information can be 
  # 1) value uniformly applied everywhere. format = int or float
  # 2) filename of GIS that provide spatially varying rainfall intensity. format = string (must contain the file extension)
  # 3) series of rain gauge points for nearest neighbor interpolation (or Voronoi diagram). format = [[X, Y, recorded rainfall intensity value in int or float], ...]
  # 4) probabilistic of rain gauge points for nearest neighbor interpolation (or Voronoi diagram). format = [[X, Y, Mean, CoV, Prob. Dist., Corr. Length X, Corr. Length Y, Min, Max], ...]
  - [0, 1, 10]
  - [1, 3, 5]
  - [3, 4, 7.5]
  - [4, 6, 0.05]  
dt_iteration: 1  # subdivision between start time and end time for each lines of rainfall history

# used when "after_termination_new_times_apply" is set as true.
# used to check later for running other types of debris-flow runout or slope stability analysis after initial failure
# time step after landslide failure occurs - unit: second
debris_t_max: 30  # maximum time
debris_dt: 1  # time increment between time steps

# accepts csv, surfer grid, ASCII asc, LiDAR las filesmats for all DEM/grid info

# DEM file and local region
DEM_file_name: "DEM_file.csv"

# increase_DEM_resolution: null # unit: m
# if null, DEM used as is
# if integer N provided, the DEM will take the average elevation of the new NxN group and make coarser DEM
# if specified interger N value is equal or smaller than the original DEM provided in DEM_file_name, error will be proclaimed terminating the simulation

# soil material file name
# if None, it is assumed all regions have same material properties
# if "GIS", "GIS" files will be provided at each DEM cells at "material_GIS". If "GIS" filenames is not provided (if null is assigned), then assumed constant values accross the DEM based on "material" properties
# if filename with the 3rd axis providing the material point ID at each DEM cells is provided, the matching properties from "material" is assigned according to the material ID
# material ID are integeters starting from 1
material_file_name: null

# soil depth
# if a filename is provided, the soil depth at each DEM cell location is used
# if a list is provided ["method", *parameters], these model method is used to determine the slope thickness
# option 1: ["uniform", H] - soil thickness = H
# option 2: ["GIS", "soil thickness filename"] - soil thickness at each DEM cell provided in GIS file
# option 3: ["Holm and Edvarson - Norway", H_min, H_max] - soil thickness = -2.578*tan(dip) + 2.612
# option 4: ["general multiregression", "linear"/"power", H_min, H_max, b0, ["param_1_filename", b1], ["param_2_filename", b2], ...] 
#             - "linear" : soil thickness = b0 + b1*param_1 + b2*param_2 + ... + bn*param_n
#             - "power"  : soil thickness = b0 * (param_1**b1) * (param_2**b2) * ... * (param_n**bn)

# with statistical model, a small random variation is introduced:
#     [Mean, coefficient of variation (CoV), Statistical Distribution, Correlation Length in X-direction, Correlation Length in Y-direction, Minimum, Maximum]
#     Statistical Distribution -> "N" = normal distribution
#     clipped at {min; max}
#     soil thickness = {min; mean*( 1 + CoV * normal(0, 1) ); max}
# option 1: ["prob - uniform", H_Mean, coefficient of variation (CoV), H_Minimum, H_Maximum] 
# option 2: ["prob - GIS", "soil thickness filename", coefficient of variation (CoV), H_Minimum, H_Maximum] 
#             - mean soil thickness at each DEM cell provided in GIS file
# option 3: ["prob - Holm and Edvarson - Norway", coefficient of variation (CoV), H_Minimum, H_Maximum] 
#             - mean soil thickness = -2.578*tan(dip) + 2.612
# option 4: ["prob - general multiregression", "linear"/"power", coefficient of variation (CoV), H_Minimum, H_Maximum, b0, ["param_1_filename", b1], ["param_2_filename", b2], ...] 
#             - "linear" : mean soil thickness = b0 + b1*param_1 + b2*param_2 + ... + bn*param_n
#             - "power"  : mean soil thickness = b0 * (param_1**b1) * (param_2**b2) * ... * (param_n**bn)

soil_depth_data: ["uniform", 4]

# groundwater table
# a list formated as ["method", *parameters], these model method is used to determine the initial groundwater table location 
# option 1: ["thickness above bedrock", thickness] - groundwater table elevation = bedrock surface elevation + thickness
# option 2: ["depth from surface", thickness] - groundwater table elevation = ground surface elevation - thickness
# option 3: ["percentage of the soil thickness above bedrock", percentage] - groundwater table elevation = bedrock surface elevation + (percentage/100)*soil thickness
# option 4: ["percentage of the soil thickness from surface", percentage] - groundwater table elevation = ground surface elevation - (percentage/100)*soil thickness
# option 5: ["GWT elevation GIS", file path and name] - groundwater table elevation
# instead of number, a filename in string can be provided to provide the GIS-based data relevent for each DEM cells
ground_water_data: ["thickness above bedrock", 0.0] 

# dip and aspect of surface and bedrock
# if no filename is provided, these values are computed
# if provided, it will directly use the dip and aspect from the specified files
dip_surf_filename: null  # in degrees (0 <= dip < 90)
aspect_surf_filename: null  # in Northing direction with degrees (0 <= aspect < 360). if flat, -1
dip_base_filename: null  # in degrees (0 <= dip < 90)
aspect_base_filename: null  # in Northing direction with degrees (0 <= aspect < 360). if flat, -1

# DEM cell size used for bilinear interpolation method used for computing dip and aspect (used also when "Holm and Edvarson - Norway" used in soil_depth_data)
local_cell_sizes_slope: 1

# debris-flow initiation criteria
# necessary for upslope contribution area (UCA) and works well for linear interpolation for gradient
# if any file names is None, they are computed
DEM_debris_flow_initiation_filename: null  # at each grid cell, 1 = shallow landslide transforms to debris-flow, 0 = only shallow landslide
DEM_neighbor_directed_graph_filename: null  # network graph formed from DEM to compute UCA based on Dijkstra path search algorithm
DEM_UCA_filename: null  # upslope contribution area (UCA) at each grid cell

# inputs - material properties at given material ID (mID) location
# by assigning different mID with "material_file_name", spatially varying material properties can be specified
# "material" must be specified when either "material_file_name" is null or filename of mID
# if "material_file_name" is null value, the material properties under material ID "1" is uniformly applied everywhere
# if "apply_root_resistance_3D" is true, "root" must be specified
material:
  "1":
    hydraulic:
      k_sat: 9.65e-06  # saturated vertical soil permeability coefficient (unit: m/s) - must be a non-zero value
      initial_suction: 10  # initial suction on soil (unit: kPa) - must be a non-zero value
      SWCC_model: "vG"  # SWCC model: "vG" = van Genutchen (1980); "FX" = Fredlund and Xing (1994)
      SWCC_a: 33.33  # SWCC fitting model coefficient a (unit: kPa)
      SWCC_n: 2.0  # SWCC fitting model coefficient n
      SWCC_m: 0.5  # SWCC fitting model coefficient m
      theta_sat: 0.3831  # saturated soil volumetric water content
      theta_residual: 0.0462  # residual soil volumetric water content
      soil_m_v: 0  # soil mass compressibility index (slope of SWCC below the air-entry-value AEV suction)
      max_surface_storage: 0  # max water height possible at surface ponding (unit: m)
    soil:
      unit_weight: 18.0  # unit weight of soil (unit: kN/m^3)
      phi: 25.0  # Mohr-Coulomb effective soil friction angle (unit: deg)
      phi_b: 10.0  # unsaturated pore-water pressure friction angle (unit: deg)
      c: 5.0  # Mohr-Coulomb effective soil cohesion (unit: kPa)
    root:
      unit_weight: 5.0  # unit weight of roots (unit: kN/m^3)
      model: "constant"  # model used to compute root resistance - options: {"constant", "van Zadelhoff et al. (2021)"}
      ## "constant" model - [c_base (kPa), c_side (kPa), root_depth (m)]
      # parameters: [5.0, 5.0, 1]  
      ## "van Zadelhoff et al. (2021)" model - [alpha2, beta2, RR_max (kN/m)]
      parameters: [1.284, 3.688, 0.01] 

# with statistical model, each material properties will be assigned in a list form containing:
#     [Mean, coefficient of variation (CoV), Statistical Distribution, Correlation Length in X-direction, Correlation Length in Y-direction, Minimum, Maximum]
#     Statistical Distribution -> "LN" = lognormal distribution or "N" = normal distribution
# when deterministic, only use non-list (numeric value) or assign "inf" in the correlation lengths or CoV = 0.0
# for exmaple, in YAML file:
#   material:
#     "1":
#       hydraulic:
#         ...
#         k_sat: [9.65e-06, 0.2, "N", 10, 10, 1e-07, 1e-05],
#         ...
#       soil:
#         ...
#         phi: [25, 0.2, "N", 500, 200, 15, 35],  # statistical
#         phi_b: 10.0,   # deterministic
#         ...
#       root:
#         ...
#         model: "van Zadelhoff et al. (2021)",
#         parameters: [[1.284, 0.3, "LN", 100, 100], [3.688, 0.1, "LN", 100, 100], 0.01]
#           # for root: parameters where a list is already required, a nested list is used
#           # alpha2 and beta2 are statically distributed, while RR_max (kN/m) are deterministic

# GIS files provided for spatially varying data
# "material_GIS" must be specified when either "material_file_name" is "GIS"
# if not the entire "material_GIS" can be null
# whenever null value is assigned in "material_GIS", the material properties of material "1" from "material" is uniformly applied everywhere
# if "apply_root_resistance_3D" is true, "root" must be specified
material_GIS:
  hydraulic:
    SWCC_model: "vG"  # SWCC model: "vG" = van Genutchen (1980); "FX" = Fredlund and Xing (1994)
    k_sat: null  # saturated vertical soil permeability coefficient (m/s) - filename in string format
    initial_suction: null  # initial suction on soil (kPa) - filename in string format
    SWCC_a: null  # SWCC fitting model coefficient a (kPa) - filename in string format
    SWCC_n: null  # SWCC fitting model coefficient n - filename in string format
    SWCC_m: null  # SWCC fitting model coefficient m - filename in string format
    theta_sat: null  # saturated soil volumetric water content - filename in string format
    theta_residual: null  # residual soil volumetric water content - filename in string format
    soil_m_v: null  # soil mass compressibility index (slope of SWCC below the air-entry-value AEV suction) - filename in string format
    max_surface_storage: null  # max water height possible at surface ponding 
  soil:
    unit_weight: null  # unit weight of soil (kN/m^3)
    phi: null  # Mohr-Coulomb effective soil friction angle (deg)
    phi_b: null  # unsaturated pore-water pressure friction angle (deg)
    c: null  # Mohr-Coulomb effective soil cohesion (kPa)
  root:
    unit_weight: null  # unit weight of roots (kN/m^3)
    method: "constant"  # model used to compute root resistance - options: {"constant", "van Zadelhoff et al. (2021)"}. In future, "user-defined" will be added

    ## "constant" model GIS filenames - [c_base (kPa), c_side (kPa), root_depth]
    # parameters: [null, null, null]  
    
    ## "van Zadelhoff et al. (2021)" model GIS filenames - [alpha2, beta2, RR_max (kN/m)]
    parameters: [null, null, null]  